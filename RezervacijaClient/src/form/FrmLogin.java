/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package form;

import domain.ZaposleniUBaru;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import logic.Controller;

/**
 *
 * @author Djapac
 */
public class FrmLogin extends javax.swing.JFrame {

    /**
     * Creates new form FrmLogin
     */
    public FrmLogin() {
        initComponents();
        setTitle("Login");
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        setLocationRelativeTo(null);
        
        txtKorisnickoIme.setText("pedja");
        txtLozinka.setText("Pedja123");
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblKorisnickoIme = new javax.swing.JLabel();
        lblLozinka = new javax.swing.JLabel();
        txtKorisnickoIme = new javax.swing.JTextField();
        btnLogin = new javax.swing.JButton();
        txtLozinka = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblKorisnickoIme.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblKorisnickoIme.setText("Korisničko ime: ");

        lblLozinka.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblLozinka.setText("Lozinka: ");

        btnLogin.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnLogin.setText("Prijavi se");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblKorisnickoIme, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                    .addComponent(lblLozinka, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtLozinka, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtKorisnickoIme, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblKorisnickoIme, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtKorisnickoIme, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLozinka, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLozinka, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(7, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        // TODO add your handling code here:
        String username = txtKorisnickoIme.getText().trim();
        String password = String.valueOf(txtLozinka.getText().trim());
        
        if(validacija(username,password)){
            
            try {
                ZaposleniUBaru zap = new ZaposleniUBaru(username, password);
                zap = Controller.getInstance().login(zap);
                
                JOptionPane.showMessageDialog(this, "Sistem je prijavio zaposlenog u baru i omogućio pristup sistemu [Zaposleni u baru: "+zap+"]", "Login", JOptionPane.INFORMATION_MESSAGE);
                new FrmMain(zap).setVisible(true);
                
                dispose();
                
                
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Sistem ne moze da zapamti podatke o prijavljivanju." , "Greska", JOptionPane.ERROR_MESSAGE);
                this.dispose();
            }
            
        }
        
    }//GEN-LAST:event_btnLoginActionPerformed

    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogin;
    private javax.swing.JLabel lblKorisnickoIme;
    private javax.swing.JLabel lblLozinka;
    private javax.swing.JTextField txtKorisnickoIme;
    private javax.swing.JPasswordField txtLozinka;
    // End of variables declaration//GEN-END:variables

    private boolean validacija(String username, String password) {
       boolean uspesno = true;
       
       ZaposleniUBaru zapa = new ZaposleniUBaru();
       zapa.setKorisnickoIme(username);
       zapa.setSifra(password);
       
        try {
            if(Controller.getInstance().getListaPrijavljenih().contains(zapa)){
                JOptionPane.showMessageDialog(this, "Zaposleni u baru sa ovim podacima postoji!");
                uspesno = false;
            }} catch (Exception ex) {
                 JOptionPane.showMessageDialog(this, "Zaposleni u baru sa ovim podacima postoji!", "Greska", JOptionPane.ERROR_MESSAGE);
                JOptionPane.showMessageDialog(this, "Sistem ne moze da zapamti podatke o prijavljivanju." , "Greska", JOptionPane.ERROR_MESSAGE);
                this.dispose();
        }
       
       if(username.isEmpty()){
            JOptionPane.showMessageDialog(this, "Popunite polje za korisnicko ime!");
            uspesno = false;
       }
       if (password.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Popunite polje za lozinku!");
            uspesno = false;
        }

        if (!username.isEmpty()) {
            if (username.length() < 4) {
                JOptionPane.showMessageDialog(this, "Korisnicko ime mora da sadrzi najmanje 4 karaktera");
                uspesno = false;
            }
        }
        
        if (!password.isEmpty()) {
            if (password.length() < 4) {
                JOptionPane.showMessageDialog(this, "Lozinka mora da sadrzi najmanje 4 karaktera");
                uspesno = false;
            }
        }
        
        if (!username.isEmpty()) {
            if (username.length() > 20) {
                JOptionPane.showMessageDialog(this, "Korisnicko ime moze da sadrzi najvise 20 karkatera");
                uspesno = false;
            }
        }
        
        if (!password.isEmpty()) {
            if (password.length() > 20) {
                JOptionPane.showMessageDialog(this, "Lozinka moze da sadrzi najvise 20 karkatera");
                uspesno = false;
            }
        }
       
       
       return uspesno;
    }
}
