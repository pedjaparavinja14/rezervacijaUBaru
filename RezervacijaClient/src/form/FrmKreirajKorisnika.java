/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package form;

import domain.Korisnik;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import logic.Controller;
import model.ModelTabeleKorisnik;

/**
 *
 * @author Djapac
 */
public class FrmKreirajKorisnika extends javax.swing.JFrame {
    
    List<Korisnik> listaKorisnika = new ArrayList<>();

    /**
     * Creates new form FrmKorisnik
     */
    public FrmKreirajKorisnika() {
        initComponents();
        setTitle("Kreiranje novog korisnika");
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSacuvaj = new javax.swing.JButton();
        btnIzadji = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtPrezime = new javax.swing.JTextField();
        txtIme = new javax.swing.JTextField();
        txtDatumRodjenja = new javax.swing.JTextField();
        txtTelefon = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnSacuvaj.setText("SAČUVAJ");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        btnIzadji.setText("IZAĐI");
        btnIzadji.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzadjiActionPerformed(evt);
            }
        });

        jLabel1.setText("Ime: ");

        jLabel2.setText("Prezime: ");

        jLabel3.setText("Datum rođenja:");

        jLabel4.setText("Telefon: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSacuvaj, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 279, Short.MAX_VALUE)
                .addComponent(btnIzadji, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(133, 133, 133))
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDatumRodjenja, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(154, 154, 154)
                    .addComponent(txtIme, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(203, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDatumRodjenja, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSacuvaj, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnIzadji, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(49, 49, 49)
                    .addComponent(txtIme, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(314, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIzadjiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzadjiActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnIzadjiActionPerformed

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed
        // TODO add your handling code here:
        String ime = txtIme.getText().trim();
        String prezime = txtPrezime.getText().trim();
        String telefon = txtTelefon.getText().trim();
        String datumRodjenja = txtDatumRodjenja.getText().trim();
        DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern("dd.MM.yyyy");
        
        
        if(validacijaKorisnika(ime, prezime, telefon, datumRodjenja)){
            try {
                LocalDate datum = LocalDate.parse(datumRodjenja, dateFormatter);
                LocalDate punoletan = LocalDate.of(2006, 7, 11);
                if(datum.isAfter(punoletan)){
                    JOptionPane.showMessageDialog(this, "Korisnik nije punoletan!", "Greška", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                
                Korisnik korisnik = new Korisnik(ime, prezime, datum, telefon);
                Controller.getInstance().createUser(korisnik);                
                JOptionPane.showMessageDialog(this, "Sistem je zapamtio korisnika!", "Korisnik", JOptionPane.INFORMATION_MESSAGE);
                new FrmPrikazKorisnika().setVisible(true);
                resetujPolja();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Sistem ne može da zapamti korisnika!", "Greška", JOptionPane.ERROR_MESSAGE);
            }
        }else{
            
            JOptionPane.showMessageDialog(this, "Sistem ne može da zapamti korisnika!", "Greška", JOptionPane.ERROR_MESSAGE);
        }
        
        
    }//GEN-LAST:event_btnSacuvajActionPerformed

    /**
     * @param args the command line arguments
     */
 
    
    private void resetujPolja() {
        txtDatumRodjenja.setText(" ");
        txtIme.setText(" ");
        txtPrezime.setText(" ");
        txtTelefon.setText(" ");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIzadji;
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField txtDatumRodjenja;
    private javax.swing.JTextField txtIme;
    private javax.swing.JTextField txtPrezime;
    private javax.swing.JTextField txtTelefon;
    // End of variables declaration//GEN-END:variables

    private boolean validacijaKorisnika(String ime, String prezime, String telefon, String datum) {
        boolean uspesno = true;
        
        if (ime.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Popunite polje za ime!");
            uspesno = false;
        }
        if (prezime.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Popunite polje za prezime!");
            uspesno = false;
        }
        if (datum.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Popunite polje za email!");
            uspesno = false;
        }

        if (telefon.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Popunite polje za telefon!");
            uspesno = false;
        }

        if (!ime.isEmpty()) {
            if (ime.length() > 20) {
                JOptionPane.showMessageDialog(this, "Ime može da sadrži najviše 20 karkatera");
                uspesno = false;
            }
        }

        if (!ime.isEmpty()) {
            if (ime.length() < 2) {
                JOptionPane.showMessageDialog(this, "Ime mora da sadrzi najmanje 2 karaktera");
                uspesno = false;
            }
        }

        if (!prezime.isEmpty()) {
            if (prezime.length() > 20) {
                JOptionPane.showMessageDialog(this, "Prezime moze da sadrži najviše 20 karkatera");
                uspesno = false;
            }
        }

        if (!prezime.isEmpty()) {
            if (prezime.length() < 4) {
                JOptionPane.showMessageDialog(this, "Prezime mora da sadrži najmanje 4 karaktera");
                uspesno = false;
            }
        }
        
        if (!ime.isEmpty()) {
            if (ime.length() >= 4 && ime.length() <= 20) {
                if (!ime.matches("[a-zA-Z ]+")) {
                    JOptionPane.showMessageDialog(this, "Ime mora da sadrži samo slova");
                    uspesno = false;
                }
            }
        }

        if (!prezime.isEmpty()) {
            if (prezime.length() >= 4 && prezime.length() <= 20) {
                if (!prezime.matches("[a-zA-Z]+")) {
                    JOptionPane.showMessageDialog(this, "Prezime mora da sadrži samo slova");
                    uspesno = false;
                }
            }
        }
        

        if(!telefon.isEmpty()){
            if(!telefon.startsWith("06")){
               JOptionPane.showMessageDialog(this, "Telefon mora biti u formatu: 06xxxxxxx");
               uspesno = false; 
            }
        }
        
        if(!telefon.isEmpty()){
            if(telefon.length()>10){
               JOptionPane.showMessageDialog(this, "Broj telefona ne može imati vise od 10 cifara!");
               uspesno = false; 
            }
        }
        
        if(!telefon.isEmpty()){
            if(telefon.length()<9){
               JOptionPane.showMessageDialog(this, "Broj telefona ne može biti kraci od 9 cifara!");
               uspesno = false; 
            }
        }
        
        if(!telefon.isEmpty()){
            if(!telefon.matches("\\d+")){
                JOptionPane.showMessageDialog(this, "Broj telefona može da sadrzi cifre samo!");
                uspesno = false;
            }
        }

        
        
        return uspesno;
    }
    
    
    
}
