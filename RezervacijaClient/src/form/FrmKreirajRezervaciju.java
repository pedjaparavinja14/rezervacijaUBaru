/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package form;

import domain.Korisnik;
import domain.Rezervacija;
import domain.StatusRezervacije;
import domain.StavkaRezervacije;
import domain.Sto;
import domain.ZaposleniUBaru;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import logic.Controller;
import model.ModelTabeleStavkaRezervacije;
import model.ModelTabeleStolovi;

/**
 *
 * @author Djapac
 */
public class FrmKreirajRezervaciju extends javax.swing.JFrame {

    ZaposleniUBaru prijavljenZaposleni;
    Rezervacija rezervacija;
    List<Sto> listaStolova = new ArrayList<>();
    Rezervacija zaIzmenuRez;
    /**
     * Creates new form FrmKreirajRezervaciju
     */
    public FrmKreirajRezervaciju() {
        initComponents();
        setTitle("Kreiranje rezervacije");
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        setLocationRelativeTo(null);
        popuniCBKorisnika();
    }

    FrmKreirajRezervaciju(ZaposleniUBaru prijavljenZaposleni) {
        initComponents();
        setTitle("Kreiranje rezervacije");
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        setLocationRelativeTo(null);
        popuniCBKorisnika();
        this.prijavljenZaposleni = prijavljenZaposleni;
        lblPrijavljen.setText(prijavljenZaposleni.getKorisnickoIme());
        popuniTabeluStavka();
        popuniTabelu();
        popuniStatuse();
        jButton1.setEnabled(false);
        
    }

    FrmKreirajRezervaciju(Rezervacija r) {
        initComponents();
        panelStavka.setVisible(false);
        this.zaIzmenuRez = r;
        lblPrijavljen.setText(r.getZaposleni().getKorisnickoIme());
        popuniCBKorisnika();
        this.prijavljenZaposleni = r.getZaposleni();
        txtBrojRezervacije.setText(r.getBrojRezervacije() + "");
        txtBrojRezervacije.setEnabled(false);
        
        btnSacuvaj.setEnabled(false);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelStavka = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblStolovi = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblStavkeRezervacije = new javax.swing.JTable();
        txtDatumStavka = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        btnIzaberiSto = new javax.swing.JButton();
        btnDodajStavku = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        cbStatus = new javax.swing.JComboBox<>();
        btnSacuvaj = new javax.swing.JButton();
        btnIzadji = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtDatumVremeOd = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtBrojRezervacije = new javax.swing.JTextField();
        txtKomentar = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtBrojLjudi = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cbKorisnik = new javax.swing.JComboBox<>();
        lblPrijavljen = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelStavka.setBorder(javax.swing.BorderFactory.createTitledBorder("Stavka rezervacije"));
        panelStavka.setName("Stavka Rezervacije"); // NOI18N

        tblStolovi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblStolovi);

        tblStavkeRezervacije.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblStavkeRezervacije);

        jLabel7.setText("Datum rezervacije: ");

        btnIzaberiSto.setText("Izaberite stolove");
        btnIzaberiSto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzaberiStoActionPerformed(evt);
            }
        });

        btnDodajStavku.setText("Dodaj stavku");
        btnDodajStavku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajStavkuActionPerformed(evt);
            }
        });

        jLabel8.setText("Status rezervacije: ");

        cbStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbStatusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelStavkaLayout = new javax.swing.GroupLayout(panelStavka);
        panelStavka.setLayout(panelStavkaLayout);
        panelStavkaLayout.setHorizontalGroup(
            panelStavkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelStavkaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelStavkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelStavkaLayout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(cbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelStavkaLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(panelStavkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelStavkaLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDatumStavka, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelStavkaLayout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(panelStavkaLayout.createSequentialGroup()
                        .addComponent(btnIzaberiSto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDodajStavku, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 538, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 6, Short.MAX_VALUE))
        );
        panelStavkaLayout.setVerticalGroup(
            panelStavkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelStavkaLayout.createSequentialGroup()
                .addGroup(panelStavkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelStavkaLayout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtDatumStavka, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(panelStavkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbStatus)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(panelStavkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIzaberiSto, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDodajStavku, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        btnSacuvaj.setText("Sačuvaj");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        btnIzadji.setText("Izađi");
        btnIzadji.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzadjiActionPerformed(evt);
            }
        });

        jLabel1.setText("Datum i vreme od:");

        jLabel2.setText("Broj rezervacije: ");

        jLabel3.setText("Komentar: ");

        jLabel4.setText("Broj ljudi:");

        jLabel5.setText("Korisnik");

        jLabel6.setText("Zaposleni: ");

        cbKorisnik.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton1.setText("Izmeni");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSacuvaj, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61)
                        .addComponent(btnIzadji, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(panelStavka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(48, 48, 48)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtBrojLjudi, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtKomentar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtBrojRezervacije, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtDatumVremeOd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(cbKorisnik, 0, 250, Short.MAX_VALUE)
                                        .addComponent(lblPrijavljen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                        .addContainerGap(50, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPrijavljen, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbKorisnik, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDatumVremeOd, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBrojRezervacije, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtKomentar, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtBrojLjudi, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelStavka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnSacuvaj, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnIzadji, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIzadjiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzadjiActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnIzadjiActionPerformed

    private void btnDodajStavkuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajStavkuActionPerformed
        // TODO add your handling code here:
      

       String datum = txtDatumStavka.getText().trim();
       List<Sto> lista = listaStolova;
       DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern("dd.MM.yyyy");
       ModelTabeleStavkaRezervacije mtsr = (ModelTabeleStavkaRezervacije) tblStavkeRezervacije.getModel();
       StatusRezervacije status = (StatusRezervacije) cbStatus.getSelectedItem();
       
        if(validacijaStavke(datum, lista, status)){
          
            LocalDate datumRezervacije = LocalDate.parse(datum, dateFormatter);
          
           for (Sto s : lista){
               StavkaRezervacije stavka = new StavkaRezervacije(null, datumRezervacije, s, status);
               mtsr.popuniStavke(stavka);
            }        
        }
        
        
        
        
        
    }//GEN-LAST:event_btnDodajStavkuActionPerformed

    private void btnIzaberiStoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzaberiStoActionPerformed
        // TODO add your handling code here:
        new FrmPretragaStola(this).setVisible(true);
        
    }//GEN-LAST:event_btnIzaberiStoActionPerformed

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed
        // TODO add your handling code here:
        
        String datumVremeOdStr = txtDatumVremeOd.getText().trim();
        String datumVremeDoStr = txtBrojRezervacije.getText().trim();
        String komentar = txtKomentar.getText().trim();
        String brojLjudi = txtBrojLjudi.getText().trim();
        String brojRezervacijeStr = txtBrojRezervacije.getText().trim();
        
                
        Korisnik korisnik = (Korisnik) cbKorisnik.getSelectedItem();
        DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern("dd.MM.yyyy HH:mm");
        ModelTabeleStavkaRezervacije mtsr = (ModelTabeleStavkaRezervacije) tblStavkeRezervacije.getModel();
        List<StavkaRezervacije> lista = mtsr.getLista();
  
        if(validacijaRezervacije(brojLjudi, datumVremeOdStr, datumVremeDoStr, komentar, korisnik, brojRezervacijeStr)){
            try {
                
                if(listaStolova.isEmpty()){
                    JOptionPane.showMessageDialog(this, "Morate izabrati stolove!");
                    return;
                }
                
                LocalDateTime datumOd = LocalDateTime.parse(datumVremeOdStr, dateFormatter);
                
                int brojLj = Integer.parseInt(brojLjudi);
                int brojRezervacije = Integer.parseInt(brojRezervacijeStr);
                
                Rezervacija r = new Rezervacija(datumOd, komentar, brojLj, lista, korisnik, prijavljenZaposleni, brojRezervacije);
                //OVDE SAM
                //Rezervacija r = new Rezervacija(datumOd, datumDo, komentar, brojLj, lista, korisnik, prijavljenZaposleni);
                
                Controller.getInstance().createReservation(r);
                resetujPolja();
                JOptionPane.showMessageDialog(this, "Sistem je sačuvao rezervaciju!", "Rezervacija", JOptionPane.INFORMATION_MESSAGE);
                
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Rezervacija već postoji u bazi. Unesite novu", "Greška", JOptionPane.INFORMATION_MESSAGE);
                JOptionPane.showMessageDialog(this, "Sistem ne može da sačuva rezervaciju!", "Greška", JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();
            }
        }else{
             JOptionPane.showMessageDialog(this, "Sistem ne može da sačuva rezervaciju!", "Greška", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_btnSacuvajActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String datumVremeOdStr = txtDatumVremeOd.getText().trim();
        String datumVremeDoStr = txtBrojRezervacije.getText().trim();
        String komentar = txtKomentar.getText().trim();
        String brojLjudi = txtBrojLjudi.getText().trim();
        String brojRezervacijeStr = txtBrojRezervacije.getText().trim();
        
                
        Korisnik korisnik = (Korisnik) cbKorisnik.getSelectedItem();
        DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern("dd.MM.yyyy HH:mm");
       // ModelTabeleStavkaRezervacije mtsr = (ModelTabeleStavkaRezervacije) tblStavkeRezervacije.getModel();
        //List<StavkaRezervacije> lista = mtsr.getLista();
  
        if(validacijaRezervacije(brojLjudi, datumVremeOdStr, datumVremeDoStr, komentar, korisnik, brojRezervacijeStr)){
            try {
                
                
                
                LocalDateTime datumOd = LocalDateTime.parse(datumVremeOdStr, dateFormatter);
                
                int brojLj = Integer.parseInt(brojLjudi);
                int brojRezervacije = Integer.parseInt(brojRezervacijeStr);
                
                zaIzmenuRez.setDatumOd(datumOd);
                zaIzmenuRez.setBrojLjudi(brojLj);
                zaIzmenuRez.setKomentar(komentar);
                zaIzmenuRez.setKorisnik(korisnik);
                
                new FrmIzmeniStavkuRez(zaIzmenuRez).setVisible(true);
               
                
                
                JOptionPane.showMessageDialog(this, "Sistem je poslao podatke za izmenu rezervacije!", "Rezervacija", JOptionPane.INFORMATION_MESSAGE);
                 this.dispose(); 
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Rezervacija već postoji u bazi. Unesite novu", "Greska", JOptionPane.INFORMATION_MESSAGE);
                JOptionPane.showMessageDialog(this, "Sistem ne može da sačuva rezervaciju!", "Greška", JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();
            }
        }else{
             JOptionPane.showMessageDialog(this, "Sistem ne može da sačuva rezervaciju!", "Greška", JOptionPane.ERROR_MESSAGE);
        }
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cbStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbStatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbStatusActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodajStavku;
    private javax.swing.JButton btnIzaberiSto;
    private javax.swing.JButton btnIzadji;
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JComboBox<Object> cbKorisnik;
    private javax.swing.JComboBox<Object> cbStatus;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblPrijavljen;
    private javax.swing.JPanel panelStavka;
    private javax.swing.JTable tblStavkeRezervacije;
    private javax.swing.JTable tblStolovi;
    private javax.swing.JTextField txtBrojLjudi;
    private javax.swing.JTextField txtBrojRezervacije;
    private javax.swing.JTextField txtDatumStavka;
    private javax.swing.JTextField txtDatumVremeOd;
    private javax.swing.JTextField txtKomentar;
    // End of variables declaration//GEN-END:variables

    private void popuniCBKorisnika() {
        cbKorisnik.removeAllItems();
        try {
            List <Korisnik> listaKorisnika = Controller.getInstance().getAllUsers();
            for (Korisnik k : listaKorisnika){
                cbKorisnik.addItem(k);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        cbKorisnik.setSelectedIndex(-1);
    }

  

    void refreshTabelu(Sto sto) {
        listaStolova.add(sto);
        ModelTabeleStolovi mts = (ModelTabeleStolovi) tblStolovi.getModel();
        mts.refresh(listaStolova);
        tblStolovi.setModel(mts);
        
    }

    private boolean validacijaStavke(String datum, List<Sto> lista, StatusRezervacije status) {
        boolean uspesno = true;
        
        if(datum.isEmpty()){
            JOptionPane.showMessageDialog(this, "Popunite polje za datum!");
            uspesno = false;
        }
        if(lista.isEmpty()){
            JOptionPane.showMessageDialog(this, "Izaberite sto/love");
            uspesno = false;
        }
        if(!status.equals(StatusRezervacije.KREIRANA)){
            JOptionPane.showMessageDialog(this, "Unesite odgovarajući status za kreiranje rezervacije!");
            uspesno = false;
        }

        return uspesno;
    }

    private void popuniTabeluStavka() {
        ModelTabeleStavkaRezervacije mtsr = new ModelTabeleStavkaRezervacije();
        tblStavkeRezervacije.setModel(mtsr);
    }

    private void popuniTabelu() {
        ModelTabeleStolovi mts = new ModelTabeleStolovi();
        tblStolovi.setModel(mts);
        
    }

    private boolean validacijaRezervacije(String brojLjudi, String datumVremeOdStr, String datumVremeDoStr, String komentar, Korisnik korisnik, String brojRezervacijeStr) {
        
        boolean uspesno = true;
        
        if (korisnik == null) {
            JOptionPane.showMessageDialog(this, "Morate izabrati korisnika!");
            uspesno = false;
        }
        if(!brojLjudi.matches("\\d+")){
            JOptionPane.showMessageDialog(this, "Broj ljudi ne sadrži samo cifre!");
            uspesno = false;
        }
        if(!brojRezervacijeStr.matches("\\d+")){
            JOptionPane.showMessageDialog(this, "Broj rezervacije ne sadrzi samo cifre!");
            uspesno = false;
        }
        
        
        return uspesno;
        
    }

    private void resetujPolja() {
        txtBrojLjudi.setText(" ");
        txtBrojRezervacije.setText(" ");
        txtDatumStavka.setText(" ");
        txtDatumVremeOd.setText(" ");
        txtKomentar.setText(" ");
        
       
        
      
    }

    private void popuniStatuse() {
        cbStatus.removeAllItems();
        
        for(StatusRezervacije rs : StatusRezervacije.values()){
            cbStatus.addItem(rs);
            
        }
        cbStatus.setSelectedItem(StatusRezervacije.KREIRANA);
    }
}
